// Code generated by fin-protoc. DO NOT EDIT.
package com.finproto.risk.bin.messages;

import com.finproto.codec.BinaryCodec;
import io.netty.buffer.ByteBuf;
import io.netty.util.internal.StringUtil;
import java.nio.charset.StandardCharsets;
import java.util.Objects;

public class RiskResult implements BinaryCodec {
  private String uniqueOrderId;
  private byte riskStatus;
  private String riskReason;

  public String getUniqueOrderId() {
    return this.uniqueOrderId;
  }

  public void setUniqueOrderId(String uniqueOrderId) {
    this.uniqueOrderId = uniqueOrderId;
  }

  public byte getRiskStatus() {
    return this.riskStatus;
  }

  public void setRiskStatus(byte riskStatus) {
    this.riskStatus = riskStatus;
  }

  public String getRiskReason() {
    return this.riskReason;
  }

  public void setRiskReason(String riskReason) {
    this.riskReason = riskReason;
  }

  @Override
  public void encode(ByteBuf byteBuf) {
    if (StringUtil.isNullOrEmpty(this.uniqueOrderId)) {
      byteBuf.writeInt(0);
    } else {
      byte[] bytes = this.uniqueOrderId.getBytes(StandardCharsets.UTF_8);
      byteBuf.writeInt(bytes.length);
      byteBuf.writeBytes(bytes);
    }

    byteBuf.writeByte(this.riskStatus);
    if (StringUtil.isNullOrEmpty(this.riskReason)) {
      byteBuf.writeInt(0);
    } else {
      byte[] bytes = this.riskReason.getBytes(StandardCharsets.UTF_8);
      byteBuf.writeInt(bytes.length);
      byteBuf.writeBytes(bytes);
    }
  }

  @Override
  public void decode(ByteBuf byteBuf) {
    int uniqueOrderIdLen = byteBuf.readInt();
    if (uniqueOrderIdLen > 0) {
      this.uniqueOrderId =
          byteBuf.readCharSequence(uniqueOrderIdLen, StandardCharsets.UTF_8).toString();
    }
    this.riskStatus = byteBuf.readByte();
    int riskReasonLen = byteBuf.readInt();
    if (riskReasonLen > 0) {
      this.riskReason = byteBuf.readCharSequence(riskReasonLen, StandardCharsets.UTF_8).toString();
    }
  }

  @Override
  public int hashCode() {
    return Objects.hash(uniqueOrderId, riskStatus, riskReason);
  }

  @Override
  public boolean equals(Object obj) {
    if (this == obj) {
      return true;
    }
    if (null == obj || getClass() != obj.getClass()) {
      return false;
    }
    RiskResult orther_ = (RiskResult) obj;
    return Objects.equals(uniqueOrderId, orther_.uniqueOrderId)
        && Objects.equals(riskStatus, orther_.riskStatus)
        && Objects.equals(riskReason, orther_.riskReason);
  }

  @Override
  public String toString() {
    return "RiskResult ["
        + "uniqueOrderId="
        + this.uniqueOrderId
        + ", riskStatus="
        + this.riskStatus
        + ", riskReason="
        + this.riskReason
        + "]";
  }
}
