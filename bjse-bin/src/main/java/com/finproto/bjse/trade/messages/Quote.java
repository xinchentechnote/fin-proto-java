// Code generated by fin-protoc. DO NOT EDIT.
package com.finproto.bjse.trade.messages;

import com.finproto.codec.BinaryCodec;
import io.netty.buffer.ByteBuf;
import java.util.HashMap;
import java.util.Map;
import java.util.Objects;
import java.util.function.Supplier;

public class Quote implements BinaryCodec {
  private String applId;
  private String submittingPbuid;
  private String securityId;
  private String securityIdsource;
  private short ownerType;
  private String clearingFirm;
  private long transactTime;
  private String userInfo;
  private String quoteMsgId;
  private String accountId;
  private String quoteReqId;
  private byte quoteType;
  private long bidPx;
  private long offerPx;
  private long bidSize;
  private long offerSize;
  private BinaryCodec applExtend;

  public String getApplId() {
    return this.applId;
  }

  public void setApplId(String applId) {
    this.applId = applId;
  }

  public String getSubmittingPbuid() {
    return this.submittingPbuid;
  }

  public void setSubmittingPbuid(String submittingPbuid) {
    this.submittingPbuid = submittingPbuid;
  }

  public String getSecurityId() {
    return this.securityId;
  }

  public void setSecurityId(String securityId) {
    this.securityId = securityId;
  }

  public String getSecurityIdsource() {
    return this.securityIdsource;
  }

  public void setSecurityIdsource(String securityIdsource) {
    this.securityIdsource = securityIdsource;
  }

  public short getOwnerType() {
    return this.ownerType;
  }

  public void setOwnerType(short ownerType) {
    this.ownerType = ownerType;
  }

  public String getClearingFirm() {
    return this.clearingFirm;
  }

  public void setClearingFirm(String clearingFirm) {
    this.clearingFirm = clearingFirm;
  }

  public long getTransactTime() {
    return this.transactTime;
  }

  public void setTransactTime(long transactTime) {
    this.transactTime = transactTime;
  }

  public String getUserInfo() {
    return this.userInfo;
  }

  public void setUserInfo(String userInfo) {
    this.userInfo = userInfo;
  }

  public String getQuoteMsgId() {
    return this.quoteMsgId;
  }

  public void setQuoteMsgId(String quoteMsgId) {
    this.quoteMsgId = quoteMsgId;
  }

  public String getAccountId() {
    return this.accountId;
  }

  public void setAccountId(String accountId) {
    this.accountId = accountId;
  }

  public String getQuoteReqId() {
    return this.quoteReqId;
  }

  public void setQuoteReqId(String quoteReqId) {
    this.quoteReqId = quoteReqId;
  }

  public byte getQuoteType() {
    return this.quoteType;
  }

  public void setQuoteType(byte quoteType) {
    this.quoteType = quoteType;
  }

  public long getBidPx() {
    return this.bidPx;
  }

  public void setBidPx(long bidPx) {
    this.bidPx = bidPx;
  }

  public long getOfferPx() {
    return this.offerPx;
  }

  public void setOfferPx(long offerPx) {
    this.offerPx = offerPx;
  }

  public long getBidSize() {
    return this.bidSize;
  }

  public void setBidSize(long bidSize) {
    this.bidSize = bidSize;
  }

  public long getOfferSize() {
    return this.offerSize;
  }

  public void setOfferSize(long offerSize) {
    this.offerSize = offerSize;
  }

  public BinaryCodec getApplExtend() {
    return this.applExtend;
  }

  public void setApplExtend(BinaryCodec applExtend) {
    this.applExtend = applExtend;
  }

  @Override
  public void encode(ByteBuf byteBuf) {
    writeFixedString(byteBuf, this.applId, 3);
    writeFixedString(byteBuf, this.submittingPbuid, 6);
    writeFixedString(byteBuf, this.securityId, 8);
    writeFixedString(byteBuf, this.securityIdsource, 4);
    byteBuf.writeShortLE(this.ownerType);
    writeFixedString(byteBuf, this.clearingFirm, 2);
    byteBuf.writeLongLE(this.transactTime);
    writeFixedString(byteBuf, this.userInfo, 32);
    writeFixedString(byteBuf, this.quoteMsgId, 10);
    writeFixedString(byteBuf, this.accountId, 10);
    writeFixedString(byteBuf, this.quoteReqId, 10);
    byteBuf.writeByte(this.quoteType);
    byteBuf.writeLongLE(this.bidPx);
    byteBuf.writeLongLE(this.offerPx);
    byteBuf.writeLongLE(this.bidSize);
    byteBuf.writeLongLE(this.offerSize);
    if (null != this.applExtend) {
      this.applExtend.encode(byteBuf);
    }
  }

  @Override
  public void decode(ByteBuf byteBuf) {
    this.applId = readFixedString(byteBuf, 3);
    this.submittingPbuid = readFixedString(byteBuf, 6);
    this.securityId = readFixedString(byteBuf, 8);
    this.securityIdsource = readFixedString(byteBuf, 4);
    this.ownerType = byteBuf.readShortLE();
    this.clearingFirm = readFixedString(byteBuf, 2);
    this.transactTime = byteBuf.readLongLE();
    this.userInfo = readFixedString(byteBuf, 32);
    this.quoteMsgId = readFixedString(byteBuf, 10);
    this.accountId = readFixedString(byteBuf, 10);
    this.quoteReqId = readFixedString(byteBuf, 10);
    this.quoteType = byteBuf.readByte();
    this.bidPx = byteBuf.readLongLE();
    this.offerPx = byteBuf.readLongLE();
    this.bidSize = byteBuf.readLongLE();
    this.offerSize = byteBuf.readLongLE();
    this.applExtend = createApplExtend(this.applId);
    this.applExtend.decode(byteBuf);
  }

  private static final Map<String, Supplier<BinaryCodec>> applExtendMap = new HashMap<>();

  static {
    applExtendMap.put("070", QuoteExtend070::new);
    applExtendMap.put("071", QuoteExtend071::new);
  }

  private BinaryCodec createApplExtend(String applId) {
    Supplier<BinaryCodec> supplier = applExtendMap.get(applId);
    if (null == supplier) {
      throw new IllegalArgumentException("Unsupported ApplID:" + applId);
    }
    return supplier.get();
  }

  @Override
  public int hashCode() {
    return Objects.hash(
        applId,
        submittingPbuid,
        securityId,
        securityIdsource,
        ownerType,
        clearingFirm,
        transactTime,
        userInfo,
        quoteMsgId,
        accountId,
        quoteReqId,
        quoteType,
        bidPx,
        offerPx,
        bidSize,
        offerSize,
        applExtend);
  }

  @Override
  public boolean equals(Object obj) {
    if (this == obj) {
      return true;
    }
    if (null == obj || getClass() != obj.getClass()) {
      return false;
    }
    Quote orther_ = (Quote) obj;
    return Objects.equals(applId, orther_.applId)
        && Objects.equals(submittingPbuid, orther_.submittingPbuid)
        && Objects.equals(securityId, orther_.securityId)
        && Objects.equals(securityIdsource, orther_.securityIdsource)
        && Objects.equals(ownerType, orther_.ownerType)
        && Objects.equals(clearingFirm, orther_.clearingFirm)
        && Objects.equals(transactTime, orther_.transactTime)
        && Objects.equals(userInfo, orther_.userInfo)
        && Objects.equals(quoteMsgId, orther_.quoteMsgId)
        && Objects.equals(accountId, orther_.accountId)
        && Objects.equals(quoteReqId, orther_.quoteReqId)
        && Objects.equals(quoteType, orther_.quoteType)
        && Objects.equals(bidPx, orther_.bidPx)
        && Objects.equals(offerPx, orther_.offerPx)
        && Objects.equals(bidSize, orther_.bidSize)
        && Objects.equals(offerSize, orther_.offerSize)
        && Objects.equals(applExtend, orther_.applExtend);
  }

  @Override
  public String toString() {
    return "Quote ["
        + "applId="
        + this.applId
        + ", submittingPbuid="
        + this.submittingPbuid
        + ", securityId="
        + this.securityId
        + ", securityIdsource="
        + this.securityIdsource
        + ", ownerType="
        + this.ownerType
        + ", clearingFirm="
        + this.clearingFirm
        + ", transactTime="
        + this.transactTime
        + ", userInfo="
        + this.userInfo
        + ", quoteMsgId="
        + this.quoteMsgId
        + ", accountId="
        + this.accountId
        + ", quoteReqId="
        + this.quoteReqId
        + ", quoteType="
        + this.quoteType
        + ", bidPx="
        + this.bidPx
        + ", offerPx="
        + this.offerPx
        + ", bidSize="
        + this.bidSize
        + ", offerSize="
        + this.offerSize
        + ", applExtend="
        + this.applExtend
        + "]";
  }
}
