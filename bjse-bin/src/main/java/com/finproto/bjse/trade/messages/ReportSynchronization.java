// Code generated by fin-protoc. DO NOT EDIT.
package com.finproto.bjse.trade.messages;

import com.finproto.codec.BinaryCodec;
import io.netty.buffer.ByteBuf;
import java.util.ArrayList;
import java.util.List;
import java.util.Objects;

public class ReportSynchronization implements BinaryCodec {
  private List<ReportPartitionSync> reportPartitionSync;

  public List<ReportPartitionSync> getReportPartitionSync() {
    return this.reportPartitionSync;
  }

  public void setReportPartitionSync(List<ReportPartitionSync> reportPartitionSync) {
    this.reportPartitionSync = reportPartitionSync;
  }

  @Override
  public void encode(ByteBuf byteBuf) {
    if (null == this.reportPartitionSync || this.reportPartitionSync.size() == 0) {
      byteBuf.writeShort(0);
    } else {
      byteBuf.writeShortLE((short) this.reportPartitionSync.size());
      for (int i = 0; i < this.reportPartitionSync.size(); i++) {
        this.reportPartitionSync.get(i).encode(byteBuf);
      }
    }
  }

  @Override
  public void decode(ByteBuf byteBuf) {
    short reportPartitionSyncSize = byteBuf.readShortLE();
    if (reportPartitionSyncSize > 0) {
      this.reportPartitionSync = new ArrayList<>();
      for (int i = 0; i < reportPartitionSyncSize; i++) {
        ReportPartitionSync reportPartitionSync_ = new ReportPartitionSync();
        reportPartitionSync_.decode(byteBuf);
        this.reportPartitionSync.add(reportPartitionSync_);
      }
    }
  }

  @Override
  public int hashCode() {
    return Objects.hash(reportPartitionSync);
  }

  @Override
  public boolean equals(Object obj) {
    if (this == obj) {
      return true;
    }
    if (null == obj || getClass() != obj.getClass()) {
      return false;
    }
    ReportSynchronization orther_ = (ReportSynchronization) obj;
    return Objects.equals(reportPartitionSync, orther_.reportPartitionSync);
  }

  @Override
  public String toString() {
    return "ReportSynchronization [" + "reportPartitionSync=" + this.reportPartitionSync + "]";
  }

  // Code generated by fin-protoc. DO NOT EDIT.
  public static class ReportPartitionSync implements BinaryCodec {
    private int partitionNo;
    private long reportIndex;

    public int getPartitionNo() {
      return this.partitionNo;
    }

    public void setPartitionNo(int partitionNo) {
      this.partitionNo = partitionNo;
    }

    public long getReportIndex() {
      return this.reportIndex;
    }

    public void setReportIndex(long reportIndex) {
      this.reportIndex = reportIndex;
    }

    @Override
    public void encode(ByteBuf byteBuf) {
      byteBuf.writeIntLE(this.partitionNo);
      byteBuf.writeLongLE(this.reportIndex);
    }

    @Override
    public void decode(ByteBuf byteBuf) {
      this.partitionNo = byteBuf.readIntLE();
      this.reportIndex = byteBuf.readLongLE();
    }

    @Override
    public int hashCode() {
      return Objects.hash(partitionNo, reportIndex);
    }

    @Override
    public boolean equals(Object obj) {
      if (this == obj) {
        return true;
      }
      if (null == obj || getClass() != obj.getClass()) {
        return false;
      }
      ReportPartitionSync orther_ = (ReportPartitionSync) obj;
      return Objects.equals(partitionNo, orther_.partitionNo)
          && Objects.equals(reportIndex, orther_.reportIndex);
    }

    @Override
    public String toString() {
      return "ReportPartitionSync ["
          + "partitionNo="
          + this.partitionNo
          + ", reportIndex="
          + this.reportIndex
          + "]";
    }
  }
}
