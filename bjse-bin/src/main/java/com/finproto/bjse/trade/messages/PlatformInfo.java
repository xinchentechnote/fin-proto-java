// Code generated by fin-protoc. DO NOT EDIT.
package com.finproto.bjse.trade.messages;

import com.finproto.codec.BinaryCodec;
import io.netty.buffer.ByteBuf;
import java.util.ArrayList;
import java.util.List;
import java.util.Objects;

public class PlatformInfo implements BinaryCodec {
  private short platformId;
  private List<NoPartitions> noPartitions;

  public short getPlatformId() {
    return this.platformId;
  }

  public void setPlatformId(short platformId) {
    this.platformId = platformId;
  }

  public List<NoPartitions> getNoPartitions() {
    return this.noPartitions;
  }

  public void setNoPartitions(List<NoPartitions> noPartitions) {
    this.noPartitions = noPartitions;
  }

  @Override
  public void encode(ByteBuf byteBuf) {
    byteBuf.writeShortLE(this.platformId);
    if (null == this.noPartitions || this.noPartitions.size() == 0) {
      byteBuf.writeShort(0);
    } else {
      byteBuf.writeShortLE((short) this.noPartitions.size());
      for (int i = 0; i < this.noPartitions.size(); i++) {
        this.noPartitions.get(i).encode(byteBuf);
      }
    }
  }

  @Override
  public void decode(ByteBuf byteBuf) {
    this.platformId = byteBuf.readShortLE();
    short noPartitionsSize = byteBuf.readShortLE();
    if (noPartitionsSize > 0) {
      this.noPartitions = new ArrayList<>();
      for (int i = 0; i < noPartitionsSize; i++) {
        NoPartitions noPartitions_ = new NoPartitions();
        noPartitions_.decode(byteBuf);
        this.noPartitions.add(noPartitions_);
      }
    }
  }

  @Override
  public int hashCode() {
    return Objects.hash(platformId, noPartitions);
  }

  @Override
  public boolean equals(Object obj) {
    if (this == obj) {
      return true;
    }
    if (null == obj || getClass() != obj.getClass()) {
      return false;
    }
    PlatformInfo orther_ = (PlatformInfo) obj;
    return Objects.equals(platformId, orther_.platformId)
        && Objects.equals(noPartitions, orther_.noPartitions);
  }

  @Override
  public String toString() {
    return "PlatformInfo ["
        + "platformId="
        + this.platformId
        + ", noPartitions="
        + this.noPartitions
        + "]";
  }

  // Code generated by fin-protoc. DO NOT EDIT.
  public static class NoPartitions implements BinaryCodec {
    private int partitionNo;
    private String partitionName;

    public int getPartitionNo() {
      return this.partitionNo;
    }

    public void setPartitionNo(int partitionNo) {
      this.partitionNo = partitionNo;
    }

    public String getPartitionName() {
      return this.partitionName;
    }

    public void setPartitionName(String partitionName) {
      this.partitionName = partitionName;
    }

    @Override
    public void encode(ByteBuf byteBuf) {
      byteBuf.writeIntLE(this.partitionNo);
      writeFixedString(byteBuf, this.partitionName, 20);
    }

    @Override
    public void decode(ByteBuf byteBuf) {
      this.partitionNo = byteBuf.readIntLE();
      this.partitionName = readFixedString(byteBuf, 20);
    }

    @Override
    public int hashCode() {
      return Objects.hash(partitionNo, partitionName);
    }

    @Override
    public boolean equals(Object obj) {
      if (this == obj) {
        return true;
      }
      if (null == obj || getClass() != obj.getClass()) {
        return false;
      }
      NoPartitions orther_ = (NoPartitions) obj;
      return Objects.equals(partitionNo, orther_.partitionNo)
          && Objects.equals(partitionName, orther_.partitionName);
    }

    @Override
    public String toString() {
      return "NoPartitions ["
          + "partitionNo="
          + this.partitionNo
          + ", partitionName="
          + this.partitionName
          + "]";
    }
  }
}
